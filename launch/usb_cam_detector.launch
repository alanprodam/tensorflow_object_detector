<launch>
  <!-- <arg name="markerId"        default="94"/> -->
  <arg name="marker1Id"         default="273"/>
  <arg name="marker2Id"         default="90"/>
  <arg name="markerSize"        default="0.30"/>    <!-- in m -->
  <arg name="dct_normalization" default="True" />
  <arg name="dct_filter_size"   default="2" />
  <arg name="marker1_frame"     default="tag_1" />
  <arg name="marker2_frame"     default="tag_2" />
  <arg name="corner_refinement" default="SUBPIX"/>

  <arg name="markerSizeRCNN"    default="0.50"/>    <!-- in m -->

<!--   <node pkg="tf" type="static_transform_publisher" name="tf_bebop_ned_to_enu" args="10 0 0 0 3.1415 drone_base drone_base2 100" /> -->

  <node pkg="aruco_ros" type="double" name="aruco_double">
      <remap from="/camera_info" to="/cv_camera/camera_info" />
      <remap from="/image" to="/cv_camera/image_rect_color" />
      <param name="image_is_rectified" value="True"/>
      <param name="marker_size" value="$(arg markerSize)"/>
      <param name="marker_id1" value="$(arg marker1Id)"/>
      <param name="marker_id2" value="$(arg marker2Id)"/>
      <param name="normalizeImage" value="$(arg dct_normalization)"/>
      <param name="dct_components_to_remove" value="$(arg dct_filter_size)"/>
      <param name="parent_name" value="drone_base2"/>
      <param name="child_name1" value="$(arg marker1_frame)" />
      <param name="child_name2" value="$(arg marker2_frame)" />
      <param name="corner_refinement" value="$(arg corner_refinement)" />
  </node>

	<node pkg= "tensorflow_object_detector" name="detect_rcnn" type="detect_rcnn.py"  output="screen"> 
    <remap from="/image" to="/cv_camera/image_rect_color"/>  <!-- /cv_camera/image_rect_color or /bebop/image_raw -->
    <param name="markerSize_RCNN" value="$(arg markerSizeRCNN)"/>
  </node> 

  <node name="cv_camera" pkg="usb_cam" type="usb_cam_node" output="screen" >
      <param name="video_device" value="/dev/video0" />
      <param name="image_width" value="640" />
      <param name="image_height" value="480" />
      <param name="pixel_format" value="yuyv" />
      <param name="camera_frame_id" value="usb_cam" />
      <param name="io_method" value="mmap"/>
      <param name="camera_info_url" value="file://$(env HOME)/.ros/camera_info/head_camera.yaml"/>
  </node>

  <node pkg="image_proc" type="image_proc" name="image_proc" ns="cv_camera" />

<!--   <node pkg= "tensorflow_object_detector" name="filter" type="fusion_filter_kalman.py"  output="screen"> 
  </node> -->

  <node pkg="image_view" type="image_view" name="RCNN">
    <remap from="image" to="/rcnn/debug_image"/>
  </node>

  <node pkg="image_view" type="image_view" name="image_view_aruco">
      <remap from="/image" to="/aruco_double/result_img" />
      <param name="marker_size"        value="$(arg markerSize)"/>
  </node>

</launch>
